{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/customer-questions/customer-questions.component.ts","./src/app/customer-questions/customer-questions.component.html","./src/app/first-and-last-messages-editor/first-and-last-messages-editor.component.ts","./src/app/first-and-last-messages-editor/first-and-last-messages-editor.component.html","./src/app/mainpage/mainpage.component.ts","./src/app/mainpage/mainpage.component.html","./src/app/message-form/message-form.component.ts","./src/app/message-form/message-form.component.html","./src/app/modal-add-question/modal-add-question.component.ts","./src/app/modal-add-question/modal-add-question.component.html","./src/app/model/score-range-result.ts","./src/app/navigation/navigation.component.ts","./src/app/navigation/navigation.component.html","./src/app/not-found/not-found.component.ts","./src/app/not-found/not-found.component.html","./src/app/question/question.component.ts","./src/app/question/question.component.html","./src/app/questions/porter-questions.component.ts","./src/app/questions/porter-questions.component.html","./src/app/score-range-message/score-range-message.component.ts","./src/app/score-range-message/score-range-message.component.html","./src/app/service/bot.service.ts","./src/app/service/image-file.service.ts","./src/app/service/main.service.ts","./src/app/service/question-service.service.ts","./src/app/service/score-range-result.service.ts","./src/app/service/user-service.service.ts","./src/app/users/users.component.ts","./src/app/users/users.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  templateUrl: './about.component.html',\r\n  styleUrls: ['./about.component.css']\r\n})\r\nexport class AboutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col\">\r\n      Здесь будут размещены иструкции, как пользоватсья ботом\r\n    </div>\r\n    <div class=\"col\">\r\n      2\r\n    </div>\r\n    <div class=\"col\">\r\n      3\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\nexport class AppComponent {\r\n  title = 'nc bot';\r\n}\r\n","<div class=\"container\">\r\n  <app-navigation></app-navigation>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\nimport {NavigationComponent} from './navigation/navigation.component';\r\nimport {RouterModule, Routes} from \"@angular/router\";\r\nimport {PorterQuestionsComponent} from './questions/porter-questions.component';\r\nimport {UsersComponent} from './users/users.component';\r\nimport {NotFoundComponent} from './not-found/not-found.component';\r\nimport {MainpageComponent} from './mainpage/mainpage.component';\r\nimport {FormsModule} from \"@angular/forms\";\r\nimport {HttpClientModule} from \"@angular/common/http\";\r\nimport { QuestionComponent } from './question/question.component';\r\nimport { ModalAddQuestionComponent } from './modal-add-question/modal-add-question.component';\r\nimport { MessageFormComponent } from './message-form/message-form.component';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { FirstAndLastMessagesEditorComponent } from './first-and-last-messages-editor/first-and-last-messages-editor.component';\r\nimport { ScoreRangeMessageComponent } from './score-range-message/score-range-message.component';\r\nimport { CustomerQuestionsComponent } from './customer-questions/customer-questions.component';\r\n\r\nconst appRoutes: Routes = [\r\n  {\r\n    path: 'questions-porter',\r\n    component: PorterQuestionsComponent\r\n  },\r\n  {\r\n    path: 'questions-customer',\r\n    component: CustomerQuestionsComponent\r\n  },\r\n  {\r\n    path: 'users',\r\n    component: UsersComponent\r\n  },\r\n  {\r\n    path: '',\r\n    component: MainpageComponent,\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'questions/add',\r\n    component: QuestionComponent\r\n  },\r\n  {\r\n    path: 'global/message',\r\n    component: MessageFormComponent\r\n  },\r\n  {\r\n    path: 'range/message',\r\n    component: ScoreRangeMessageComponent\r\n  },\r\n  {\r\n    path: '**',\r\n    component: NotFoundComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavigationComponent,\r\n    PorterQuestionsComponent,\r\n    UsersComponent,\r\n    NotFoundComponent,\r\n    MainpageComponent,\r\n    QuestionComponent,\r\n    ModalAddQuestionComponent,\r\n    MessageFormComponent,\r\n    AboutComponent,\r\n    FirstAndLastMessagesEditorComponent,\r\n    ScoreRangeMessageComponent,\r\n    CustomerQuestionsComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    RouterModule.forRoot(appRoutes)\r\n  ],\r\n  exports: [RouterModule],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import {Component, OnInit} from '@angular/core';\nimport {Question} from \"../model/question/question\";\nimport {ImageFileService} from \"../service/image-file.service\";\nimport {QuestionServiceService} from \"../service/question-service.service\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {ModalAddQuestionComponent} from \"../modal-add-question/modal-add-question.component\";\n\n@Component({\n  selector: 'app-customer-questions',\n  templateUrl: './customer-questions.component.html',\n  styleUrls: ['./customer-questions.component.css']\n})\nexport class CustomerQuestionsComponent implements OnInit {\n  questions: Question[];\n  public selectedFile;\n\n  constructor(private imageFileService: ImageFileService, private questionService: QuestionServiceService, private modalService: NgbModal) {\n  }\n\n  ngOnInit(): void {\n    this.questionService.getAllQuestionsCustomer().subscribe((result: Question[]) => {\n        this.questions = result;\n      }\n    );\n  }\n\n  openCreationNewQuestionFormCustomer() {\n    let modalForm = this.modalService.open(ModalAddQuestionComponent);\n    modalForm.componentInstance.userType = \"CUSTOMER\";\n  }\n\n  deleteQuestion(id) {\n    this.questionService.deleteQuestion(id).subscribe(result => {\n      location.reload();\n    }, error => {\n      alert(\"Error\");\n    });\n\n  }\n}\n","<div class=\"container-fluid\">\n  <button type=\"button\" (click)=\"openCreationNewQuestionFormCustomer()\" class=\"btn btn-primary btn-lg btn-block\"\n          style=\"margin: 20px 0 20px 0\">add new question\n  </button>\n  <table class=\"table table-borderless\">\n    <thead>\n    <tr>\n      <th>\n        №\n      </th>\n      <th>\n        content\n      </th>\n      <th>\n        actions\n      </th>\n    </tr>\n    </thead>\n    <tbody *ngFor=\"let question of questions; let i = index\">\n    <tr id=\"'tr__' + {{i}}\">\n      <td>\n        {{i + 1}}\n      </td>\n      <td>\n        {{question.content}}\n      </td>\n      <td>\n        <div class=\"container\">\n          <div class=\"row\" style=\"text-align: center\">\n            <div class=\"col\">\n              <button class=\"btn btn-danger\" (click)=\"deleteQuestion(question.id)\">delete</button>\n            </div>\n          </div>\n        </div>\n      </td>\n    </tr>\n    </tbody>\n  </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-first-and-last-messages-editor',\r\n  templateUrl: './first-and-last-messages-editor.component.html',\r\n  styleUrls: ['./first-and-last-messages-editor.component.css']\r\n})\r\nexport class FirstAndLastMessagesEditorComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>first-and-last-messages-editor works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {BotService} from \"../service/bot.service\";\r\nimport {Bot} from \"../model/bot/bot\";\r\n\r\n@Component({\r\n  selector: 'app-mainpage',\r\n  templateUrl: './mainpage.component.html',\r\n  styleUrls: ['./mainpage.component.css']\r\n})\r\nexport class MainpageComponent implements OnInit {\r\n  bot:Bot = {\r\n    active:true\r\n  };\r\n  constructor(private botService:BotService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.botService.isBotActive().subscribe((result:Bot) =>{\r\n      this.bot = result;\r\n    })\r\n  }\r\n\r\n  onClickTurnBtn(){\r\n    this.botService.setBotTurn(this.bot).subscribe((result:Bot) =>{\r\n      this.bot = result;\r\n      location.reload();\r\n    });\r\n  }\r\n\r\n  checkBotActivity():string{\r\n    if (this.bot.active == true) {\r\n      return \"on\";\r\n    }\r\n    return \"off\";\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col\">\r\n      find me: @ey_example_bot\r\n    </div>\r\n    <div class=\"col\">\r\n      Porter Service Bot configurator\r\n    </div>\r\n    <div class=\"col\">\r\n      настройка бота Porter Service\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col container-fluid\" style=\"text-align: center\">\r\n      <button class=\"btn btn-primary\" (click)=\"onClickTurnBtn()\">{{checkBotActivity()}}</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {MessageToUsers} from \"../model/message-to-users\";\r\nimport {MainService} from \"../service/main.service\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-message-form',\r\n  templateUrl: './message-form.component.html',\r\n  styleUrls: ['./message-form.component.css']\r\n})\r\nexport class MessageFormComponent implements OnInit {\r\n  messageToUsers: MessageToUsers = {\r\n    text: '',\r\n    maxScore:0,\r\n    minScore:0\r\n  };\r\n\r\n  constructor(private mainService: MainService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  sendMessageToUsers() {\r\n    this.mainService.sendMessageToUsers(this.messageToUsers).subscribe(result => {\r\n        window.location.href = \"/\";\r\n      },\r\n      error => {\r\n        alert(\"Error during sending the message\");\r\n      })\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col\">\r\n        <label for=\"message__form\">input message for porters</label>\r\n        <textarea id=\"message__form\" [(ngModel)]=\"messageToUsers.text\"></textarea>\r\n    </div>\r\n    <div class=\"col\">\r\n      score range for message\r\n      from: <input type=\"text\" [(ngModel)]=\"messageToUsers.minScore\"/>\r\n      to: <input type=\"text\" [(ngModel)]=\"messageToUsers.maxScore\"/>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col\">\r\n      <button class=\"btn-primary\" (click)=\"sendMessageToUsers()\">send message</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {NgbModal, NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\r\nimport {Question} from \"../model/question/question\";\r\nimport {Option} from \"../model/option/option\";\r\nimport {QuestionServiceService} from \"../service/question-service.service\";\r\nimport {ImageFile} from \"../model/image-file\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-modal-add-question',\r\n  templateUrl: './modal-add-question.component.html',\r\n  styleUrls: ['./modal-add-question.component.css']\r\n})\r\nexport class ModalAddQuestionComponent implements OnInit {\r\n  @Input() editQuestion:Question;\r\n  @Input() userType:string;\r\n  modalForm: NgbActiveModal;\r\n  indexOfTrueOption:number;\r\n  isQuestionChanged:boolean;\r\n  question: Question = {\r\n    attachment: undefined,\r\n    userType: \"\",\r\n    id:0,\r\n    content: ''\r\n  };\r\n\r\n\r\n  constructor(private modalService: NgbModal, private modal: NgbActiveModal, private questionService: QuestionServiceService) {\r\n    this.modalForm = modal;\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    if (this.editQuestion != null) {\r\n      this.isQuestionChanged = true;\r\n      this.question = this.editQuestion;\r\n    }\r\n    else  {\r\n      this.isQuestionChanged = false;\r\n    }\r\n  }\r\n\r\n  saveQuestion() {\r\n    let i:number = 0;\r\n    this.question.userType = this.userType;\r\n    this.questionService.sendQuestion(this.question, this.isQuestionChanged).subscribe(result => {\r\n        location.reload();\r\n      },\r\n      error => {\r\n        alert(\"Error\")\r\n      });\r\n    this.modalForm.close(\"Efrfrf\");\r\n  }\r\n}\r\n","<div class=\"modal-lg\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">add new question</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modalForm.dismiss('Cross click')\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <label for=\"question__input\">\r\n            question\r\n          </label>\r\n        </div>\r\n        <div class=\"col\">\r\n      <textarea [(ngModel)]=\"question.content\" id=\"question__input\">\r\n      </textarea>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"submit\" class=\"btn btn-primary\" style=\"margin: 0 20px auto\" (click)=\"saveQuestion()\" *ngIf=\"isQuestionChanged\">\r\n      edit question\r\n    </button>\r\n    <button type=\"submit\" class=\"btn btn-primary\" style=\"margin: 0 20px auto\" (click)=\"saveQuestion()\" *ngIf=\"!isQuestionChanged\">\r\n      save question\r\n    </button>\r\n  </div>\r\n</div>\r\n","export class ScoreRangeResult {\r\n  id:number;\r\n  max:number;\r\n  text:string;\r\n  image:File;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navigation',\r\n  templateUrl: './navigation.component.html',\r\n  styleUrls: ['./navigation.component.css']\r\n})\r\nexport class NavigationComponent implements OnInit {\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <a class=\"navbar-brand\" href=\"#\">PORTER SERVICE</a>\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n    <div class=\"navbar-nav\">\r\n      <a class=\"nav-item nav-link active\" href=\"/\">home<span class=\"sr-only\">(current)</span></a>\r\n      <a class=\"nav-item nav-link\" href=\"/questions-customer\">анкета клиента</a>\r\n      <a class=\"nav-item nav-link\" href=\"/questions-porter\">анкета работника</a>\r\n      <a class=\"nav-item nav-link\" href=\"/porters\">клиенты</a>\r\n      <a class=\"nav-item nav-link\" href=\"/porters\">работники</a>\r\n      <a class=\"nav-item nav-link\" href=\"/global/message\">send message</a>\r\n      <a class=\"nav-item nav-link\" href=\"/range/message\">score ranged messages</a>\r\n      <a class=\"nav-item nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">sign in/up</a>\r\n    </div>\r\n  </div>\r\n</nav>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.css']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>not-found works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Question} from \"../model/question/question\";\r\n\r\n@Component({\r\n  selector: 'app-question',\r\n  templateUrl: './question.component.html',\r\n  styleUrls: ['./question.component.css']\r\n})\r\nexport class QuestionComponent implements OnInit {\r\n  model:Question = {\r\n    userType: \"\",\r\n    content:'',\r\n    id:0\r\n  };\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  sendQuestionWithOptions(): void{\r\n    let url=\"http://localhost:8080/questions/add/porters\";\r\n    this.httpClient.post(url, this.model).subscribe(res =>\r\n      {\r\n        location.reload();\r\n      },\r\n      error => {\r\n        alert(\"Error\");\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","<form (submit)=\"sendQuestionWithOptions()\">\r\n  <div class=\"form-group row\">\r\n    <label for=\"question__content\" class=\"col-sm-2 col-form-label\">question</label>\r\n    <div class=\"col-sm-10\">\r\n      <input type=\"text\" class=\"form-control\" id=\"question__content\" [(ngModel)] = model.content placeholder=\"question\">\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group row\">\r\n    <div class=\"col-sm-10\">\r\n      <button type=\"submit\" class=\"btn btn-primary\">ok</button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {Question} from \"../model/question/question\";\r\nimport {QuestionServiceService} from \"../service/question-service.service\";\r\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\r\nimport {ModalAddQuestionComponent} from \"../modal-add-question/modal-add-question.component\";\r\nimport {ImageFileService} from \"../service/image-file.service\";\r\n\r\n@Component({\r\n  selector: 'app-questions',\r\n  templateUrl: './porter-questions.component.html',\r\n  styleUrls: ['./porter-questions.component.css']\r\n})\r\nexport class PorterQuestionsComponent implements OnInit {\r\n  questions: Question[];\r\n  public selectedFile;\r\n\r\n  constructor(private imageFileService: ImageFileService, private questionService: QuestionServiceService, private modalService: NgbModal) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.questionService.getAllQuestionsPorter().subscribe((result: Question[]) => {\r\n        this.questions = result;\r\n      }\r\n    );\r\n  }\r\n\r\n  openCreationNewQuestionFormPorter() {\r\n    let modalForm = this.modalService.open(ModalAddQuestionComponent);\r\n    modalForm.componentInstance.userType = \"PORTER\";\r\n  }\r\n\r\n  deleteQuestion(id) {\r\n    this.questionService.deleteQuestion(id).subscribe(result => {\r\n      location.reload();\r\n    }, error => {\r\n      alert(\"Error\");\r\n    });\r\n  }\r\n\r\n  editQuestion(q: Question) {\r\n    let modalForm = this.modalService.open(ModalAddQuestionComponent);\r\n    modalForm.componentInstance.editQuestion = q;\r\n  }\r\n\r\n  processFile(questionId: number) {\r\n    this.imageFileService.uploadImage(questionId, this.selectedFile).subscribe(result => {\r\n        alert(\"Success\");\r\n      },\r\n      error => {\r\n        alert(\"Something go wrong!..\")\r\n      });\r\n  }\r\n\r\n  onFileChanged(event) {\r\n    this.selectedFile = event.target.files[0];\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n  <button type=\"button\" (click)=\"openCreationNewQuestionFormPorter()\" class=\"btn btn-primary btn-lg btn-block\"\r\n          style=\"margin: 20px 0 20px 0\">add new question\r\n  </button>\r\n  <table class=\"table table-borderless\">\r\n    <thead>\r\n    <tr>\r\n      <th>\r\n        №\r\n      </th>\r\n      <th>\r\n        content\r\n      </th>\r\n      <th>\r\n        actions\r\n      </th>\r\n    </tr>\r\n    </thead>\r\n    <tbody *ngFor=\"let question of questions; let i = index\">\r\n    <tr id=\"'tr__' + {{i}}\">\r\n      <td>\r\n        {{i + 1}}\r\n      </td>\r\n      <td>\r\n        {{question.content}}\r\n      </td>\r\n      <td>\r\n        <div class=\"container\">\r\n          <div class=\"row\" style=\"text-align: center\">\r\n            <div class=\"col\">\r\n              <button class=\"btn btn-danger\" (click)=\"deleteQuestion(question.id)\">delete</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </td>\r\n    </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {ScoreRangeResult} from \"../model/score-range-result\";\r\nimport {ScoreRangeResultService} from \"../service/score-range-result.service\";\r\nimport {ImageFileService} from \"../service/image-file.service\";\r\n\r\n@Component({\r\n  selector: 'app-score-range-message',\r\n  templateUrl: './score-range-message.component.html',\r\n  styleUrls: ['./score-range-message.component.css']\r\n})\r\nexport class ScoreRangeMessageComponent implements OnInit {\r\n  scoreRanges:ScoreRangeResult[];\r\n  imageFile:File;\r\n  constructor(private scoreRangeResultService: ScoreRangeResultService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.scoreRanges = [];\r\n    this.scoreRangeResultService.getAllScoreRangeResults().subscribe((result:ScoreRangeResult) => {\r\n      this.scoreRanges.push(result);\r\n    });\r\n  }\r\n\r\n  addNewScoreRange() {\r\n    let scoreRangeResult: ScoreRangeResult = new ScoreRangeResult();\r\n    this.scoreRanges.push(scoreRangeResult);\r\n  }\r\n\r\n  scoreRangeResultSend(scoreRangeResult: ScoreRangeResult) {\r\n    scoreRangeResult.image = this.imageFile;\r\n    this.scoreRangeResultService.uploadImageForScoreRange(scoreRangeResult).subscribe(result =>{\r\n      alert(\"SUCCESS\");\r\n    },\r\n      error => {\r\n      alert(\"ERROR\");\r\n      })\r\n  }\r\n\r\n  changeImageFile(event) {\r\n    this.imageFile = event.target.files[0];\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n  <button class=\"btn-primary\" (click)=\"addNewScoreRange()\">new score range</button>\r\n  <div class=\"row\" *ngFor=\"let scoreRange of this.scoreRanges; let i = index\">\r\n    <div class=\"col\">\r\n      <div class=\"form-group\">\r\n        <label>max range</label>\r\n        <input [(ngModel)]=\"scoreRange.max\" type=\"number\"/>\r\n        <input [(ngModel)]=\"scoreRange.text\" type=\"text\"/>\r\n        <input (change)=\"changeImageFile($event)\" type=\"file\"/>\r\n      </div>\r\n    </div>\r\n    <button (click)=\"scoreRangeResultSend(scoreRange)\" class=\"btn-dark\">ok</button>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {Bot} from \"../model/bot/bot\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BotService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  isBotActive():Observable<any> {\r\n    return this.httpClient.get(\"/bot/get/turn\");\r\n  }\r\n\r\n  setBotTurn(bot:Bot):any {\r\n    let url:string = \"/bot/turn\";\r\n    return this.httpClient.post(url, bot);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {Observable} from \"rxjs\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ImageFileService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  uploadImage(questionId: number, file: File):Observable<any> {\r\n    alert(\"UPLOAD IMAGE!\");\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n    let url = \"questions/attachment/upload/\" + questionId;\r\n    return this.httpClient.post(url, formData);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {MessageToUsers} from \"../model/message-to-users\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MainService {\r\n\r\n  constructor(private httpClient:HttpClient) { }\r\n\r\n  sendMessageToUsers(messageToUsers:MessageToUsers):Observable<any> {\r\n    let url:string = \"send/global/message\";\r\n    return this.httpClient.post(url, messageToUsers);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Question} from \"../model/question/question\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QuestionServiceService {\r\n  host = \"/questions/\";\r\n  question: Question;\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n  }\r\n\r\n  getAllQuestionsPorter(): Observable<any> {\r\n    let url = this.host + \"all/porters\";\r\n    return this.httpClient.get(url);\r\n  }\r\n\r\n  getAllQuestionsCustomer(): Observable<any> {\r\n    let url = this.host + \"all/customers\";\r\n    return this.httpClient.get(url);\r\n  }\r\n\r\n  sendQuestion(question: Question, isQuestionChanged: boolean): any {\r\n    let url:string;\r\n    if (isQuestionChanged) {\r\n      url = this.host + \"edit\";\r\n    } else {\r\n      url = this.host + \"add\";\r\n    }\r\n    return this.httpClient.post(url, question);\r\n  }\r\n\r\n  deleteQuestion(id): Observable<any> {\r\n    let url = this.host + \"remove?id=\" + id;\r\n    return this.httpClient.get(url);\r\n  }\r\n\r\n  editQuestion(id): Observable<any> {\r\n    let url = this.host + \"edit?id=\" + id;\r\n    return this.httpClient.get(url);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {ScoreRangeResult} from \"../model/score-range-result\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ScoreRangeResultService {\r\n\r\n  constructor(private httpClient:HttpClient) { }\r\n\r\n  getAllScoreRangeResults() {\r\n    return this.httpClient.get(\"/score/ranges\");\r\n  }\r\n\r\n  uploadImageForScoreRange(scoreRangeResult: ScoreRangeResult) {\r\n    let url = \"score/ranges/\";\r\n    const formData = new FormData();\r\n    formData.append(\"max\", scoreRangeResult.max.toString());\r\n    formData.append(\"text\", scoreRangeResult.text);\r\n    formData.append(\"image\", scoreRangeResult.image);\r\n    return this.httpClient.post(url, formData);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {Observable} from \"rxjs\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserServiceService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getAllUsers(): Observable<any> {\r\n    return this.httpClient.get(\"all/users\");\r\n  }\r\n\r\n  givePresentToUser(id): Observable<any> {\r\n    let url = \"user/\" + id + \"/present\";\r\n    return this.httpClient.get(url);\r\n  }\r\n\r\n  isPresenGivenToUser(id): any {\r\n    let url = \"user/\" + id + \"/present/check\";\r\n    return this.httpClient.get(url);\r\n  }\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {UserServiceService} from \"../service/user-service.service\";\r\nimport {User} from \"../model/user/user\";\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.css']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n  users: User[];\r\n\r\n  constructor(private userService: UserServiceService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getAllUsers().subscribe((result: User[]) => {\r\n        this.users = result;\r\n        this.checkIsUserActiveNow(this.users);\r\n      }\r\n    )\r\n  }\r\n\r\n  checkIsUserActiveNow(users): void {\r\n    users.forEach(function (value: User) {\r\n      if (value.activeNow) {\r\n        value.color = \"yellow\";\r\n      }\r\n      if (value.presentGiven) {\r\n        value.color = \"red\";\r\n      }\r\n    });\r\n  }\r\n\r\n  givePresentToUser(id): void {\r\n    this.userService.givePresentToUser(id).subscribe(result => {\r\n      location.reload();\r\n    })\r\n  }\r\n\r\n}\r\n","<table class=\"table table-bordered\">\r\n  <thead>\r\n  <tr>\r\n    <th>\r\n      №\r\n    </th>\r\n    <th>\r\n      telegram id\r\n    </th>\r\n    <th>\r\n      first name\r\n    </th>\r\n    <th>\r\n      last name\r\n    </th>\r\n    <th>\r\n      porter name\r\n    </th>\r\n    <th>\r\n      score\r\n    </th>\r\n    <th>\r\n      is present given\r\n    </th>\r\n  </tr>\r\n  </thead>\r\n  <tbody *ngFor=\"let porter of users; let i = index\">\r\n  <tr [ngStyle]=\"{'background-color':porter.color}\">\r\n    <td>\r\n      {{i}}\r\n    </td>\r\n    <td>\r\n      {{porter.telegramId}}\r\n    </td>\r\n    <td>\r\n      {{porter.firstName}}\r\n    </td>\r\n    <td>\r\n      {{porter.lastName}}\r\n    </td>\r\n    <td>\r\n      {{porter.username}}\r\n    </td>\r\n    <td>\r\n      {{porter.score}}\r\n    </td>\r\n    <td>\r\n      <button class=\"badge-info\" (click)=\"givePresentToUser(porter.id)\" [disabled]=\"porter.presentGiven\">give present</button>\r\n    </td>\r\n  </tr>\r\n  </tbody>\r\n</table>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}