{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/about/about.component.ts","webpack:///src/app/about/about.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/customer-questions/customer-questions.component.ts","webpack:///src/app/customer-questions/customer-questions.component.html","webpack:///src/app/first-and-last-messages-editor/first-and-last-messages-editor.component.ts","webpack:///src/app/first-and-last-messages-editor/first-and-last-messages-editor.component.html","webpack:///src/app/mainpage/mainpage.component.ts","webpack:///src/app/mainpage/mainpage.component.html","webpack:///src/app/message-form/message-form.component.ts","webpack:///src/app/message-form/message-form.component.html","webpack:///src/app/modal-add-question/modal-add-question.component.ts","webpack:///src/app/modal-add-question/modal-add-question.component.html","webpack:///src/app/model/score-range-result.ts","webpack:///src/app/navigation/navigation.component.ts","webpack:///src/app/navigation/navigation.component.html","webpack:///src/app/not-found/not-found.component.ts","webpack:///src/app/not-found/not-found.component.html","webpack:///src/app/question/question.component.ts","webpack:///src/app/question/question.component.html","webpack:///src/app/questions/porter-questions.component.ts","webpack:///src/app/questions/porter-questions.component.html","webpack:///src/app/score-range-message/score-range-message.component.ts","webpack:///src/app/score-range-message/score-range-message.component.html","webpack:///src/app/service/bot.service.ts","webpack:///src/app/service/image-file.service.ts","webpack:///src/app/service/main.service.ts","webpack:///src/app/service/question-service.service.ts","webpack:///src/app/service/score-range-result.service.ts","webpack:///src/app/service/user-service.service.ts","webpack:///src/app/users/users.component.ts","webpack:///src/app/users/users.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AboutComponent","selector","templateUrl","styleUrls","routes","AppRoutingModule","forRoot","imports","AppComponent","title","appRoutes","path","component","pathMatch","AppModule","declarations","providers","bootstrap","CustomerQuestionsComponent","httpClient","model","userType","content","url","post","subscribe","res","location","reload","error","alert","sendQuestionWithOptions","FirstAndLastMessagesEditorComponent","MainpageComponent","botService","bot","active","isBotActive","result","setBotTurn","onClickTurnBtn","MessageFormComponent","mainService","messageToUsers","text","maxScore","minScore","sendMessageToUsers","window","href","ModalAddQuestionComponent","modalService","modal","questionService","question","attachment","undefined","modalForm","editQuestion","isQuestionChanged","i","sendQuestion","close","ScoreRangeResult","NavigationComponent","NotFoundComponent","QuestionComponent","PorterQuestionsComponent","imageFileService","getAllQuestions","questions","open","deleteQuestion","q","componentInstance","questionId","uploadImage","selectedFile","event","target","files","openCreationNewQuestionForm","ScoreRangeMessageComponent","scoreRangeResultService","scoreRanges","getAllScoreRangeResults","push","scoreRangeResult","image","imageFile","uploadImageForScoreRange","addNewScoreRange","BotService","get","providedIn","ImageFileService","file","formData","FormData","append","MainService","QuestionServiceService","host","ScoreRangeResultService","max","toString","UserServiceService","UsersComponent","userService","getAllUsers","users","checkIsUserActiveNow","forEach","value","activeNow","color","presentGiven","givePresentToUser","environment","production","bootstrapModule","catch","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  templateUrl: './about.component.html',\r\n  styleUrls: ['./about.component.css']\r\n})\r\nexport class AboutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col\">\r\n      Здесь будут размещены иструкции, как пользоватсья ботом\r\n    </div>\r\n    <div class=\"col\">\r\n      2\r\n    </div>\r\n    <div class=\"col\">\r\n      3\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\nexport class AppComponent {\r\n  title = 'nc bot';\r\n}\r\n","<div class=\"container\">\r\n  <app-navigation></app-navigation>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\nimport {NavigationComponent} from './navigation/navigation.component';\r\nimport {RouterModule, Routes} from \"@angular/router\";\r\nimport {PorterQuestionsComponent} from './questions/porter-questions.component';\r\nimport {UsersComponent} from './users/users.component';\r\nimport {NotFoundComponent} from './not-found/not-found.component';\r\nimport {MainpageComponent} from './mainpage/mainpage.component';\r\nimport {FormsModule} from \"@angular/forms\";\r\nimport {HttpClientModule} from \"@angular/common/http\";\r\nimport { QuestionComponent } from './question/question.component';\r\nimport { ModalAddQuestionComponent } from './modal-add-question/modal-add-question.component';\r\nimport { MessageFormComponent } from './message-form/message-form.component';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { FirstAndLastMessagesEditorComponent } from './first-and-last-messages-editor/first-and-last-messages-editor.component';\r\nimport { ScoreRangeMessageComponent } from './score-range-message/score-range-message.component';\nimport { CustomerQuestionsComponent } from './customer-questions/customer-questions.component';\r\n\r\nconst appRoutes: Routes = [\r\n  {\r\n    path: 'questions',\r\n    component: PorterQuestionsComponent\r\n  },\r\n  {\r\n    path: 'users',\r\n    component: UsersComponent\r\n  },\r\n  {\r\n    path: '',\r\n    component: MainpageComponent,\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'questions/add',\r\n    component: QuestionComponent\r\n  },\r\n  {\r\n    path: 'global/message',\r\n    component: MessageFormComponent\r\n  },\r\n  {\r\n    path: 'range/message',\r\n    component: ScoreRangeMessageComponent\r\n  },\r\n  {\r\n    path: '**',\r\n    component: NotFoundComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavigationComponent,\r\n    PorterQuestionsComponent,\r\n    UsersComponent,\r\n    NotFoundComponent,\r\n    MainpageComponent,\r\n    QuestionComponent,\r\n    ModalAddQuestionComponent,\r\n    MessageFormComponent,\r\n    AboutComponent,\r\n    FirstAndLastMessagesEditorComponent,\r\n    ScoreRangeMessageComponent,\r\n    CustomerQuestionsComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    RouterModule.forRoot(appRoutes)\r\n  ],\r\n  exports: [RouterModule],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Question} from \"../model/question/question\";\n\n@Component({\n  selector: 'app-customer-questions',\n  templateUrl: './customer-questions.component.html',\n  styleUrls: ['./customer-questions.component.css']\n})\nexport class CustomerQuestionsComponent implements OnInit {\n  model:Question = {\n    userType: \"CUSTOMER\",\n    id:0,\n    content:''\n  };\n  constructor(private httpClient: HttpClient) { }\n\n  ngOnInit(): void {\n  }\n\n  sendQuestionWithOptions(): void{\n    let url=\"http://localhost:8080/questions/add/customers\";\n    this.httpClient.post(url, this.model).subscribe(res =>\n      {\n        location.reload();\n      },\n      error => {\n        alert(\"Error\");\n      }\n    )\n  }\n\n}\n\n","<form (submit)=\"sendQuestionWithOptions()\">\n  <div class=\"form-group row\">\n    <label for=\"question__content\" class=\"col-sm-2 col-form-label\">question</label>\n    <div class=\"col-sm-10\">\n      <input type=\"text\" class=\"form-control\" id=\"question__content\" [(ngModel)] = model.content placeholder=\"question\">\n    </div>\n  </div>\n  <div class=\"form-group row\">\n    <div class=\"col-sm-10\">\n      <button type=\"submit\" class=\"btn btn-primary\">ok</button>\n    </div>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-first-and-last-messages-editor',\r\n  templateUrl: './first-and-last-messages-editor.component.html',\r\n  styleUrls: ['./first-and-last-messages-editor.component.css']\r\n})\r\nexport class FirstAndLastMessagesEditorComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>first-and-last-messages-editor works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {BotService} from \"../service/bot.service\";\r\nimport {Bot} from \"../model/bot/bot\";\r\n\r\n@Component({\r\n  selector: 'app-mainpage',\r\n  templateUrl: './mainpage.component.html',\r\n  styleUrls: ['./mainpage.component.css']\r\n})\r\nexport class MainpageComponent implements OnInit {\r\n  bot:Bot = {\r\n    active:true\r\n  };\r\n  constructor(private botService:BotService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.botService.isBotActive().subscribe((result:Bot) =>{\r\n      this.bot = result;\r\n    })\r\n  }\r\n\r\n  onClickTurnBtn(){\r\n    this.botService.setBotTurn(this.bot).subscribe((result:Bot) =>{\r\n      this.bot = result;\r\n      location.reload();\r\n    });\r\n  }\r\n\r\n  checkBotActivity():string{\r\n    if (this.bot.active == true) {\r\n      return \"on\";\r\n    }\r\n    return \"off\";\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col\">\r\n      find me: @ey_example_bot\r\n    </div>\r\n    <div class=\"col\">\r\n      Porter Service Bot configurator\r\n    </div>\r\n    <div class=\"col\">\r\n      настройка бота Porter Service\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col container-fluid\" style=\"text-align: center\">\r\n      <button class=\"btn btn-primary\" (click)=\"onClickTurnBtn()\">{{checkBotActivity()}}</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {MessageToUsers} from \"../model/message-to-users\";\r\nimport {MainService} from \"../service/main.service\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-message-form',\r\n  templateUrl: './message-form.component.html',\r\n  styleUrls: ['./message-form.component.css']\r\n})\r\nexport class MessageFormComponent implements OnInit {\r\n  messageToUsers: MessageToUsers = {\r\n    text: '',\r\n    maxScore:0,\r\n    minScore:0\r\n  };\r\n\r\n  constructor(private mainService: MainService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  sendMessageToUsers() {\r\n    this.mainService.sendMessageToUsers(this.messageToUsers).subscribe(result => {\r\n        window.location.href = \"/\";\r\n      },\r\n      error => {\r\n        alert(\"Error during sending the message\");\r\n      })\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col\">\r\n        <label for=\"message__form\">input message for porters</label>\r\n        <textarea id=\"message__form\" [(ngModel)]=\"messageToUsers.text\"></textarea>\r\n    </div>\r\n    <div class=\"col\">\r\n      score range for message\r\n      from: <input type=\"text\" [(ngModel)]=\"messageToUsers.minScore\"/>\r\n      to: <input type=\"text\" [(ngModel)]=\"messageToUsers.maxScore\"/>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col\">\r\n      <button class=\"btn-primary\" (click)=\"sendMessageToUsers()\">send message</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {NgbModal, NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\r\nimport {Question} from \"../model/question/question\";\r\nimport {Option} from \"../model/option/option\";\r\nimport {QuestionServiceService} from \"../service/question-service.service\";\r\nimport {ImageFile} from \"../model/image-file\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-modal-add-question',\r\n  templateUrl: './modal-add-question.component.html',\r\n  styleUrls: ['./modal-add-question.component.css']\r\n})\r\nexport class ModalAddQuestionComponent implements OnInit {\r\n  @Input() editQuestion:Question;\r\n  modalForm: NgbActiveModal;\r\n  indexOfTrueOption:number;\r\n  isQuestionChanged:boolean;\r\n  question: Question = {\r\n    attachment: undefined,\r\n    userType: \"\",\r\n    id:0,\r\n    content: ''\r\n  };\r\n\r\n\r\n  constructor(private modalService: NgbModal, private modal: NgbActiveModal, private questionService: QuestionServiceService) {\r\n    this.modalForm = modal;\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    if (this.editQuestion != null) {\r\n      this.isQuestionChanged = true;\r\n      this.question = this.editQuestion;\r\n    }\r\n    else  {\r\n      this.isQuestionChanged = false;\r\n    }\r\n  }\r\n\r\n  saveQuestion() {\r\n    let i:number = 0;\r\n    this.questionService.sendQuestion(this.question, this.isQuestionChanged).subscribe(result => {\r\n        location.reload();\r\n      },\r\n      error => {\r\n        alert(\"Error\")\r\n      });\r\n    this.modalForm.close(\"Efrfrf\");\r\n  }\r\n}\r\n","<div class=\"modal-lg\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">add new question</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modalForm.dismiss('Cross click')\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <label for=\"question__input\">\r\n            question\r\n          </label>\r\n        </div>\r\n        <div class=\"col\">\r\n      <textarea [(ngModel)]=\"question.content\" id=\"question__input\">\r\n      </textarea>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"submit\" class=\"btn btn-primary\" style=\"margin: 0 20px auto\" (click)=\"saveQuestion()\" *ngIf=\"isQuestionChanged\">\r\n      edit question\r\n    </button>\r\n    <button type=\"submit\" class=\"btn btn-primary\" style=\"margin: 0 20px auto\" (click)=\"saveQuestion()\" *ngIf=\"!isQuestionChanged\">\r\n      save question\r\n    </button>\r\n  </div>\r\n</div>\r\n","export class ScoreRangeResult {\r\n  id:number;\r\n  max:number;\r\n  text:string;\r\n  image:File;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navigation',\r\n  templateUrl: './navigation.component.html',\r\n  styleUrls: ['./navigation.component.css']\r\n})\r\nexport class NavigationComponent implements OnInit {\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <a class=\"navbar-brand\" href=\"#\">PORTER SERVICE</a>\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n    <div class=\"navbar-nav\">\r\n      <a class=\"nav-item nav-link active\" href=\"/\">home<span class=\"sr-only\">(current)</span></a>\r\n      <a class=\"nav-item nav-link\" href=\"/questions\">анкета клиента</a>\r\n      <a class=\"nav-item nav-link\" href=\"/questions\">анкета работника</a>\r\n      <a class=\"nav-item nav-link\" href=\"/porters\">клиенты</a>\r\n      <a class=\"nav-item nav-link\" href=\"/porters\">работники</a>\r\n      <a class=\"nav-item nav-link\" href=\"/global/message\">send message</a>\r\n      <a class=\"nav-item nav-link\" href=\"/range/message\">score ranged messages</a>\r\n      <a class=\"nav-item nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">sign in/up</a>\r\n    </div>\r\n  </div>\r\n</nav>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.css']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>not-found works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Question} from \"../model/question/question\";\r\n\r\n@Component({\r\n  selector: 'app-question',\r\n  templateUrl: './question.component.html',\r\n  styleUrls: ['./question.component.css']\r\n})\r\nexport class QuestionComponent implements OnInit {\r\n  model:Question = {\r\n    userType: \"\",\r\n    content:'',\r\n    id:0\r\n  };\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  sendQuestionWithOptions(): void{\r\n    let url=\"http://localhost:8080/questions/add/porters\";\r\n    this.httpClient.post(url, this.model).subscribe(res =>\r\n      {\r\n        location.reload();\r\n      },\r\n      error => {\r\n        alert(\"Error\");\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","<form (submit)=\"sendQuestionWithOptions()\">\r\n  <div class=\"form-group row\">\r\n    <label for=\"question__content\" class=\"col-sm-2 col-form-label\">question</label>\r\n    <div class=\"col-sm-10\">\r\n      <input type=\"text\" class=\"form-control\" id=\"question__content\" [(ngModel)] = model.content placeholder=\"question\">\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group row\">\r\n    <div class=\"col-sm-10\">\r\n      <button type=\"submit\" class=\"btn btn-primary\">ok</button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {Question} from \"../model/question/question\";\r\nimport {QuestionServiceService} from \"../service/question-service.service\";\r\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\r\nimport {ModalAddQuestionComponent} from \"../modal-add-question/modal-add-question.component\";\r\nimport {ImageFileService} from \"../service/image-file.service\";\r\n\r\n@Component({\r\n  selector: 'app-questions',\r\n  templateUrl: './porter-questions.component.html',\r\n  styleUrls: ['./porter-questions.component.css']\r\n})\r\nexport class PorterQuestionsComponent implements OnInit {\r\n  questions: Question[];\r\n  public selectedFile;\r\n\r\n  constructor(private imageFileService: ImageFileService, private questionService: QuestionServiceService, private modalService: NgbModal) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.questionService.getAllQuestions().subscribe((result: Question[]) => {\r\n        this.questions = result;\r\n      }\r\n    );\r\n  }\r\n\r\n  openCreationNewQuestionForm() {\r\n    this.modalService.open(ModalAddQuestionComponent);\r\n  }\r\n\r\n  deleteQuestion(id) {\r\n    this.questionService.deleteQuestion(id).subscribe(result => {\r\n      location.reload();\r\n    }, error => {\r\n      alert(\"Error\");\r\n    });\r\n  }\r\n\r\n  editQuestion(q: Question) {\r\n    let modalForm = this.modalService.open(ModalAddQuestionComponent);\r\n    modalForm.componentInstance.editQuestion = q;\r\n  }\r\n\r\n  processFile(questionId: number) {\r\n    this.imageFileService.uploadImage(questionId, this.selectedFile).subscribe(result => {\r\n        alert(\"Success\");\r\n      },\r\n      error => {\r\n        alert(\"Something go wrong!..\")\r\n      });\r\n  }\r\n\r\n  onFileChanged(event) {\r\n    this.selectedFile = event.target.files[0];\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n  <button type=\"button\" (click)=\"openCreationNewQuestionForm()\" class=\"btn btn-primary btn-lg btn-block\"\r\n          style=\"margin: 20px 0 20px 0\">add new question\r\n  </button>\r\n  <table class=\"table table-bordered\">\r\n    <thead>\r\n    <tr>\r\n      <th>\r\n        №\r\n      </th>\r\n      <th>\r\n        content\r\n      </th>\r\n      <th>\r\n        actions\r\n      </th>\r\n    </tr>\r\n    </thead>\r\n    <tbody *ngFor=\"let question of questions; let i = index\">\r\n    <tr id=\"'tr__' + {{i}}\">\r\n      <td>\r\n        {{i + 1}}\r\n      </td>\r\n      <td>\r\n        {{question.content}}\r\n      </td>\r\n      <td>\r\n        <div class=\"container\">\r\n          <div class=\"row\" style=\"text-align: center\">\r\n            <div class=\"col\">\r\n              <button class=\"btn btn-primary\" (click)=\"editQuestion(question)\">edit</button>\r\n            </div>\r\n            <div class=\"col\">\r\n              <button class=\"btn btn-danger\" (click)=\"deleteQuestion(question.id)\">delete</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </td>\r\n    </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {ScoreRangeResult} from \"../model/score-range-result\";\r\nimport {ScoreRangeResultService} from \"../service/score-range-result.service\";\r\nimport {ImageFileService} from \"../service/image-file.service\";\r\n\r\n@Component({\r\n  selector: 'app-score-range-message',\r\n  templateUrl: './score-range-message.component.html',\r\n  styleUrls: ['./score-range-message.component.css']\r\n})\r\nexport class ScoreRangeMessageComponent implements OnInit {\r\n  scoreRanges:ScoreRangeResult[];\r\n  imageFile:File;\r\n  constructor(private scoreRangeResultService: ScoreRangeResultService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.scoreRanges = [];\r\n    this.scoreRangeResultService.getAllScoreRangeResults().subscribe((result:ScoreRangeResult) => {\r\n      this.scoreRanges.push(result);\r\n    });\r\n  }\r\n\r\n  addNewScoreRange() {\r\n    let scoreRangeResult: ScoreRangeResult = new ScoreRangeResult();\r\n    this.scoreRanges.push(scoreRangeResult);\r\n  }\r\n\r\n  scoreRangeResultSend(scoreRangeResult: ScoreRangeResult) {\r\n    scoreRangeResult.image = this.imageFile;\r\n    this.scoreRangeResultService.uploadImageForScoreRange(scoreRangeResult).subscribe(result =>{\r\n      alert(\"SUCCESS\");\r\n    },\r\n      error => {\r\n      alert(\"ERROR\");\r\n      })\r\n  }\r\n\r\n  changeImageFile(event) {\r\n    this.imageFile = event.target.files[0];\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n  <button class=\"btn-primary\" (click)=\"addNewScoreRange()\">new score range</button>\r\n  <div class=\"row\" *ngFor=\"let scoreRange of this.scoreRanges; let i = index\">\r\n    <div class=\"col\">\r\n      <div class=\"form-group\">\r\n        <label>max range</label>\r\n        <input [(ngModel)]=\"scoreRange.max\" type=\"number\"/>\r\n        <input [(ngModel)]=\"scoreRange.text\" type=\"text\"/>\r\n        <input (change)=\"changeImageFile($event)\" type=\"file\"/>\r\n      </div>\r\n    </div>\r\n    <button (click)=\"scoreRangeResultSend(scoreRange)\" class=\"btn-dark\">ok</button>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {Bot} from \"../model/bot/bot\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BotService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  isBotActive():Observable<any> {\r\n    return this.httpClient.get(\"/bot/get/turn\");\r\n  }\r\n\r\n  setBotTurn(bot:Bot):any {\r\n    let url:string = \"/bot/turn\";\r\n    return this.httpClient.post(url, bot);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {Observable} from \"rxjs\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ImageFileService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  uploadImage(questionId: number, file: File):Observable<any> {\r\n    alert(\"UPLOAD IMAGE!\");\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n    let url = \"questions/attachment/upload/\" + questionId;\r\n    return this.httpClient.post(url, formData);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {MessageToUsers} from \"../model/message-to-users\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MainService {\r\n\r\n  constructor(private httpClient:HttpClient) { }\r\n\r\n  sendMessageToUsers(messageToUsers:MessageToUsers):Observable<any> {\r\n    let url:string = \"send/global/message\";\r\n    return this.httpClient.post(url, messageToUsers);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Question} from \"../model/question/question\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QuestionServiceService {\r\n  host = \"/questions/\";\r\n  question: Question;\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n  }\r\n\r\n  getAllQuestions(): Observable<any> {\r\n    let url = this.host + \"all/text\";\r\n    return this.httpClient.get(url);\r\n  }\r\n\r\n  sendQuestion(question: Question, isQuestionChanged: boolean): any {\r\n    let url:string;\r\n    if (isQuestionChanged) {\r\n      url = this.host + \"edit\";\r\n    } else {\r\n      url = this.host + \"add\";\r\n    }\r\n    return this.httpClient.post(url, question);\r\n  }\r\n\r\n  deleteQuestion(id): Observable<any> {\r\n    let url = this.host + \"remove?id=\" + id;\r\n    return this.httpClient.get(url);\r\n  }\r\n\r\n  editQuestion(id): Observable<any> {\r\n    let url = this.host + \"edit?id=\" + id;\r\n    return this.httpClient.get(url);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {ScoreRangeResult} from \"../model/score-range-result\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ScoreRangeResultService {\r\n\r\n  constructor(private httpClient:HttpClient) { }\r\n\r\n  getAllScoreRangeResults() {\r\n    return this.httpClient.get(\"/score/ranges\");\r\n  }\r\n\r\n  uploadImageForScoreRange(scoreRangeResult: ScoreRangeResult) {\r\n    let url = \"score/ranges/\";\r\n    const formData = new FormData();\r\n    formData.append(\"max\", scoreRangeResult.max.toString());\r\n    formData.append(\"text\", scoreRangeResult.text);\r\n    formData.append(\"image\", scoreRangeResult.image);\r\n    return this.httpClient.post(url, formData);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {Observable} from \"rxjs\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserServiceService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getAllUsers(): Observable<any> {\r\n    return this.httpClient.get(\"all/users\");\r\n  }\r\n\r\n  givePresentToUser(id): Observable<any> {\r\n    let url = \"user/\" + id + \"/present\";\r\n    return this.httpClient.get(url);\r\n  }\r\n\r\n  isPresenGivenToUser(id): any {\r\n    let url = \"user/\" + id + \"/present/check\";\r\n    return this.httpClient.get(url);\r\n  }\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {UserServiceService} from \"../service/user-service.service\";\r\nimport {User} from \"../model/user/user\";\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.css']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n  users: User[];\r\n\r\n  constructor(private userService: UserServiceService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getAllUsers().subscribe((result: User[]) => {\r\n        this.users = result;\r\n        this.checkIsUserActiveNow(this.users);\r\n      }\r\n    )\r\n  }\r\n\r\n  checkIsUserActiveNow(users): void {\r\n    users.forEach(function (value: User) {\r\n      if (value.activeNow) {\r\n        value.color = \"yellow\";\r\n      }\r\n      if (value.presentGiven) {\r\n        value.color = \"red\";\r\n      }\r\n    });\r\n  }\r\n\r\n  givePresentToUser(id): void {\r\n    this.userService.givePresentToUser(id).subscribe(result => {\r\n      location.reload();\r\n    })\r\n  }\r\n\r\n}\r\n","<table class=\"table table-bordered\">\r\n  <thead>\r\n  <tr>\r\n    <th>\r\n      №\r\n    </th>\r\n    <th>\r\n      telegram id\r\n    </th>\r\n    <th>\r\n      first name\r\n    </th>\r\n    <th>\r\n      last name\r\n    </th>\r\n    <th>\r\n      porter name\r\n    </th>\r\n    <th>\r\n      score\r\n    </th>\r\n    <th>\r\n      is present given\r\n    </th>\r\n  </tr>\r\n  </thead>\r\n  <tbody *ngFor=\"let porter of users; let i = index\">\r\n  <tr [ngStyle]=\"{'background-color':porter.color}\">\r\n    <td>\r\n      {{i}}\r\n    </td>\r\n    <td>\r\n      {{porter.telegramId}}\r\n    </td>\r\n    <td>\r\n      {{porter.firstName}}\r\n    </td>\r\n    <td>\r\n      {{porter.lastName}}\r\n    </td>\r\n    <td>\r\n      {{porter.username}}\r\n    </td>\r\n    <td>\r\n      {{porter.score}}\r\n    </td>\r\n    <td>\r\n      <button class=\"badge-info\" (click)=\"givePresentToUser(porter.id)\" [disabled]=\"porter.presentGiven\">give present</button>\r\n    </td>\r\n  </tr>\r\n  </tbody>\r\n</table>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}